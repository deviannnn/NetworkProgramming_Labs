package Lab8;

import java.io.IOException;
import java.net.*;
import javax.swing.*;

public class UDPServer extends javax.swing.JFrame {

    private DatagramSocket server;
    private int Iport, ImaxSize;
    private boolean uppercase = false;

    public UDPServer(boolean uppercase) {
        initComponents();
        this.uppercase = uppercase;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        contentArea = new javax.swing.JTextArea();
        textFieldPort = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        startBtn = new javax.swing.JButton();
        textFieldMaxSize = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        jScrollPane1.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("UDP Server");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        contentArea.setEditable(false);
        contentArea.setBackground(new java.awt.Color(255, 255, 255));
        contentArea.setColumns(20);
        contentArea.setRows(5);
        contentArea.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        contentArea.setEnabled(false);
        jScrollPane2.setViewportView(contentArea);

        textFieldPort.setText("2020");
        textFieldPort.setToolTipText("protocol");

        jLabel4.setText("Port No:");

        startBtn.setText("Start");
        startBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        textFieldMaxSize.setText("56507");
        textFieldMaxSize.setToolTipText("protocol");

        jLabel5.setText("Max Packet Size:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldMaxSize, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startBtn)
                    .addComponent(textFieldMaxSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        setBounds(20, 100, 600, 400);
    }// </editor-fold>//GEN-END:initComponents

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed
        // TODO add your handling code here:
        String maxSizeStr = textFieldMaxSize.getText().trim();
        String portStr = textFieldPort.getText().trim();

        try {
            Iport = Integer.parseInt(portStr);
            ImaxSize = Integer.parseInt(maxSizeStr);

            if (Iport < 1 || Iport > 65535) {
                throw new IllegalArgumentException("Port number must be between 1 and 65535");
            }

            byte[] buffet = new byte[ImaxSize];
            server = new DatagramSocket(Iport);
            DatagramPacket packet = new DatagramPacket(buffet, buffet.length);

            Thread receiverThread = new Thread(() -> {
                try {
                    String msg = "";
                    while (!msg.equals("exit")) {
                        server.receive(packet);
                        msg = new String(packet.getData(), 0, packet.getLength(), "UTF-8");
                        if (uppercase) {
                            String response = msg.toUpperCase();
                            byte[] responseData = response.getBytes("UTF-8");
                            DatagramPacket responsePacket = new DatagramPacket(responseData, responseData.length, packet.getAddress(), packet.getPort());
                            server.send(responsePacket);
                        }
                        contentArea.append(packet.getAddress() + " at port " + packet.getPort() + " says: " + msg + "\n");
                    }
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage(), "IOException", JOptionPane.ERROR_MESSAGE);
                }
            });
            receiverThread.start();

            contentArea.setText("Server is ready to receive data...\n");

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Malformed Number at: " + maxSizeStr + " or " + portStr, "Invalid Number", JOptionPane.WARNING_MESSAGE);
        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Invalid Port Number", JOptionPane.WARNING_MESSAGE);
        } catch (SocketException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "SocketException", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_startBtnActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if (server != null && !server.isClosed()) {
            server.close();
        }
        Menu.backToMenu(this);
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea contentArea;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton startBtn;
    private javax.swing.JTextField textFieldMaxSize;
    private javax.swing.JTextField textFieldPort;
    // End of variables declaration//GEN-END:variables
}
